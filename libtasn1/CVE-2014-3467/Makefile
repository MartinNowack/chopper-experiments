ROOT=$(realpath ../..)
include $(ROOT)/common.mk

SRC_PATH=./libtasn1-3.5/

INCLUDES=-I $(KLEE_DIR)/../klee/include -I $(SRC_PATH) -I $(SRC_PATH)/lib -I $(SRC_PATH)/lib/gllib
DEFINES=-D_GNU_SOURCE -DSIZEOF_UNSIGNED_INT=4 -DSIZEOF_UNSIGNED_LONG_INT=8

CFLAGS=-emit-llvm -c -g $(DEFINES) $(INCLUDES)
LDFLAGS=

%.bc: %.c
	$(CLANG) $(CFLAGS) $< -o $@

SOURCES=$(shell ls $(SRC_PATH)/lib/*.c) $(shell ls $(SRC_PATH)/lib/gllib/hash-pjw-bare.c) main.c
DEPS=$(patsubst %.c,%.o,$(SOURCES))
BC_DEPS=$(patsubst %.c,%.bc,$(SOURCES))

TARGET=test.bc

all: $(TARGET)

$(TARGET): $(BC_DEPS)
	$(LINK) $^ -o $@
	$(OPT) -mem2reg $@ -o $@
	$(DIS) $@

run-klee: $(TARGET)
	time $(KLEE) \
	-exit-on-error-type=Ptr \
	--libc=uclibc --posix-runtime \
	--search=dfs \
	--no-output \
	test.bc 64

run-cse: $(TARGET)
	time $(KLEE) \
	--exit-on-error-type=Ptr \
	--libc=uclibc --posix-runtime \
	--split-search --search=random-state \
	--skip-functions=_asn1_set_value,_asn1_append_value,asn1_delete_structure \
	--inline=memcpy,memset \
	--no-output \
	test.bc 10

clean:
	rm -rf $(DEPS) $(BC_DEPS) $(TARGET)
	rm -f test.*
	rm -rf klee-*
